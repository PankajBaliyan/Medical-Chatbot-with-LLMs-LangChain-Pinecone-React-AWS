name: Build and Deploy Medical Chatbot App (Production) - Fast API + Vite

on:
  push:
    branches:
      - main  # Trigger deployment on push to the main branch
    paths:
      - 'app/**'  # Only run on changes in app/ folder and subpaths

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up a Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"  # Adjust the Node.js version if needed
          cache: 'npm'
          cache-dependency-path: app/package-lock.json  # Cache scoped to app/ for faster installations

      # Step 3: Create a.env.production file with GitHub Secrets (inside app/)
      - name: Create .env.production file
        run: |
          cd app
          echo "VITE_APP_API_URL=${{ secrets.VITE_APP_API_URL }}" >> .env.production

      # Step 4: Install dependencies (in app/ only)
      - name: Install dependencies
        run: cd app && npm ci  # Use 'npm ci' for cleaner, faster installations in CI

      # Step 5: Build the Vite app (in app/ only)
      - name: Build project
        run: cd app && npm run build  # This will generate the production build in app/dist/

      # Step 6: Clean remote folder except .htaccess
      - name: Clean remote folder except .htaccess
        uses: appleboy/ssh-action@v1.0.3  # Updated to the latest stable version
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 65002  # Specify your custom port here
          script: |
            if [ -d domains/pankajdev.in/public_html/medical-chatbot ]; then
              echo "üåü Directory exists. Cleaning files... üßπ"
              cd domains/pankajdev.in/public_html/medical-chatbot
              find . -maxdepth 1 ! -name ".htaccess" -exec rm -rf {} +
              echo "‚ú® Contents after deletion:"
              ls -la
              echo "‚úÖ Files cleaned successfully! Ready for new deployment üöÄ"
            else
              echo "‚ùå Directory does not exist. Please create /domains/pankajdev.in/public_html/medical-chatbot."
            fi

      # Step 7: Upload the build folder to the server via SFTP
      - name: Upload via SFTP
        uses: appleboy/scp-action@v1.0.0  # Updated to the latest stable version
        with:
          host: ${{ secrets.SERVER_HOST }}  # Server's IP address or hostname (set in GitHub Secrets)
          username: ${{ secrets.SERVER_USER }}  # SFTP username (set in GitHub Secrets)
          password: ${{ secrets.SERVER_PASSWORD }}  # SFTP password (set in GitHub Secrets)
          port: 65002  # Specify your custom port here
          source: "app/dist/"  # Local build folder (Vite outputs to app/dist/)
          target: "domains/pankajdev.in/public_html/medical-chatbot"  # Remote folder where you want to deploy the files
          strip_components: 1  # Ensures the dist/ contents are uploaded directly (flattens structure)
          debug: true  # Enable debug output to help troubleshoot issues

      # Step 8: Post-upload message
      - name: Post-upload message
        uses: appleboy/ssh-action@v1.0.3  # Updated to the latest stable version
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 65002  # Specify your custom port here if needed
          script: |
            echo "üéâ Deployment Complete! Your new build is live at /domains/pankajdev.in/public_html/medical-chatbot üéâ"
            echo "üîÑ Refresh the page to see the changes! üåê"

      # Step 9: Optional - Restart the server or perform post-deployment tasks
      # - name: Run post-deployment commands via SSH
      #   uses: appleboy/ssh-action@v1.0.3
      #   with:
      #     host: ${{ secrets.SERVER_HOST }}
      #     username: ${{ secrets.SERVER_USER }}
      #     password: ${{ secrets.SERVER_PASSWORD }}
      #     script: |
      #       cd /domains/pankajdev.in/public_html/medical-chatbot
      #       # Example: Run any necessary post-deployment commands here
      #       pm2 restart my-app  # If you're using pm2 or a similar tool to manage your app